{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextDetection from './Containers/TextDetection/TextDetection';\nimport TextTable from './Components/TextTable/TextTable';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function App() {\n  _s();\n\n  const [text, setText] = useState([]);\n  const classes = useStyles();\n\n  const handleChange = async image => {\n    var formData = new FormData();\n    formData.append('photo', image[0]);\n    const response = await fetch('/upload', {\n      method: \"post\",\n      body: formData\n    });\n    const body = await response.json();\n    console.log(body.split(/\\r?\\n/));\n    setText(body.split(/\\r?\\n/));\n  };\n\n  function clearText() {\n    setText(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      children: /*#__PURE__*/_jsxDEV(TextDetection, {\n        uploadImage: handleChange,\n        clearText: clearText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      children: /*#__PURE__*/_jsxDEV(TextTable, {\n        segments: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1VgLtJqU/dsK+aVDX9awFJc1yWI=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/App.js"],"names":["React","useState","makeStyles","Grid","TextDetection","TextTable","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","App","setText","classes","handleChange","image","formData","FormData","append","response","fetch","method","body","json","console","log","split","clearText"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAJgC,CAAZ,CAAD,CAA5B;AAYA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMmB,OAAO,GAAGd,SAAS,EAAzB;;AAEA,QAAMe,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,KAAK,CAAC,CAAD,CAA9B;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAY;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,IAAI,EAAEN;AAFgC,KAAZ,CAA5B;AAIA,UAAMM,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,KAAL,CAAW,OAAX,CAAZ;AACAd,IAAAA,OAAO,CAACU,IAAI,CAACI,KAAL,CAAW,OAAX,CAAD,CAAP;AACD,GAVD;;AAYA,WAASC,SAAT,GAAqB;AACnBf,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACZ,IAAxB;AAA8B,IAAA,OAAO,EAAE,CAAvC;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,WAAW,EAAEa,YAA5B;AAA0C,QAAA,SAAS,EAAEa;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAElB;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA/BuBE,G;UAGNZ,S;;;KAHMY,G","sourcesContent":["import React, { useState }from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid';\nimport TextDetection from './Containers/TextDetection/TextDetection'\nimport TextTable from './Components/TextTable/TextTable'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }\n}))\n\n\nexport default function App() {\n  const [text, setText] = useState([])\n\n  const classes = useStyles()\n\n  const handleChange = async (image) => {\n    var formData = new FormData();\n    formData.append('photo', image[0])\n    const response = await fetch('/upload', {\n      method: \"post\",\n      body: formData\n    })\n    const body = await response.json();\n    console.log(body.split(/\\r?\\n/))\n    setText(body.split(/\\r?\\n/))\n  }\n\n  function clearText() {\n    setText(\"\")\n  }\n\n  return (\n    <div className={classes.root} spacing={2}>\n      <Grid item xs={12} sm={4}>\n        <TextDetection uploadImage={handleChange} clearText={clearText}/>\n      </Grid>\n      <Grid item xs={12} sm={8}>\n        <TextTable segments={text}/>\n      </Grid>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}