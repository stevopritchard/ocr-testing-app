{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/TextTable/TextTable.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Scroll from '../Scroll/Scroll';\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-ot-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nexport default function TextTable({\n  segments\n}) {\n  return /*#__PURE__*/_jsxDEV(Scroll, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Segment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Transcribed Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: segments ? segments.map((segment, i) => {\n            return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: segment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"text goes here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = TextTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextTable\");","map":{"version":3,"sources":["/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/TextTable/TextTable.js"],"names":["React","withStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Scroll","StyledTableCell","theme","head","backgroundColor","palette","color","common","white","body","fontSize","StyledTableRow","root","action","hover","TextTable","segments","map","segment","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA0B,0BAA1B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,eAAe,GAAGR,UAAU,CAAES,KAAD,KAAY;AAC3CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OADnB;AAEJC,IAAAA,KAAK,EAAEJ,KAAK,CAACG,OAAN,CAAcE,MAAd,CAAqBC;AAFxB,GADqC;AAK3CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AALqC,CAAZ,CAAD,CAAV,CASlBd,SATkB,CAAxB;AAWA,MAAMe,cAAc,GAAGlB,UAAU,CAAES,KAAD,KAAY;AAC9CU,EAAAA,IAAI,EAAE;AACF,0BAAsB;AACtBR,MAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcQ,MAAd,CAAqBC;AADhB;AADpB;AADwC,CAAZ,CAAD,CAAV,CAMnBf,QANmB,CAAvB;AAQA,eAAe,SAASgB,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA+B;AAC1C,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,cAAD;AAAA,6BACA,QAAC,KAAD;AAAA,gCACI,QAAC,SAAD;AAAA,iCACA,QAAC,QAAD;AAAA,oCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,SAAD;AAAA,oBAEIA,QAAQ,GACRA,QAAQ,CAACC,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACzB,gCACA,QAAC,cAAD;AAAA,sCACI,QAAC,eAAD;AAAA,0BAAkBA,CAAC,GAAC;AAApB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,eAAD;AAAA,0BAAkBD;AAAlB;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,eAAqBC,CAArB;AAAA;AAAA;AAAA;AAAA,oBADA;AAMH,WAPD,CADQ,gBASR,QAAC,cAAD;AAAA,oCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;KAhCuBJ,S","sourcesContent":["import React from 'react';\nimport { withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Scroll from '../Scroll/Scroll';\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  \n  }))(TableCell);\n  \nconst StyledTableRow = withStyles((theme) => ({\nroot: {\n    '&:nth-ot-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n    },\n},\n}))(TableRow);\n\nexport default function TextTable({segments}) {\n    return (\n        <Scroll>\n            <TableContainer>\n            <Table>\n                <TableHead>\n                <TableRow>\n                    <StyledTableCell>Segment</StyledTableCell>\n                    <StyledTableCell>Transcribed Text</StyledTableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                {\n                    segments ?\n                    segments.map((segment, i) => {\n                        return (\n                        <StyledTableRow key={i}>\n                            <StyledTableCell>{i+1}</StyledTableCell>\n                            <StyledTableCell>{segment}</StyledTableCell>\n                        </StyledTableRow>\n                        )\n                    }) :\n                    <StyledTableRow>\n                        <StyledTableCell>0</StyledTableCell>\n                        <StyledTableCell>text goes here</StyledTableCell>\n                    </StyledTableRow>\n                }\n                </TableBody>\n            </Table>\n            </TableContainer>\n        </Scroll>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}