{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephenpritchard/Web Development/ocr-frontend/src/App.js\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Grid, Container, AppBar, Tabs, Tab, Box, Button } from '@material-ui/core'; // import TabPanel from '@material-ui/lab/TabPanel';\n// import \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n\n    this.getText = async () => {\n      const response = await fetch('/read_text');\n      const body = await response.json();\n      console.log(body);\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    // this.callServer()\n    // .then(res => this.setState({data: res.express}))\n    // .catch(err => console.log(err));\n    this.getText().then(res => this.setState(res.description)).catch(err => console.log(err));\n  } // callServer = async () => {\n  //   const response = await fetch('/express_backend');\n  //   const body = await response.json()\n  //   console.log(body)\n  //   if(response.status !== 200) {\n  //     throw Error(body.message)\n  //   }\n  //   return body\n  // };\n\n\n  render() {\n    let value = undefined;\n    let handleChange = undefined;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"App\",\n      direction: \"row\",\n      alignItems: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleChange,\n          \"aria-label\": \"simple tabs example\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Item One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Item Two\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Item Three\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: acceptedFiles => console.log(acceptedFiles),\n        children: ({\n          getRootProps,\n          getInputProps\n        }) => /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag 'n' drop some files here, or click to select files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            padding: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenpritchard/Web Development/ocr-frontend/src/App.js"],"names":["React","Dropzone","Grid","Container","AppBar","Tabs","Tab","Box","Button","App","Component","state","data","getText","response","fetch","body","json","console","log","status","Error","message","componentDidMount","then","res","setState","description","catch","err","render","value","undefined","handleChange","acceptedFiles","getRootProps","getInputProps","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Grid, Container, AppBar, Tabs, Tab, Box, Button} from '@material-ui/core';\n// import TabPanel from '@material-ui/lab/TabPanel';\n// import \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    data: null\n  };\n\n  componentDidMount() {\n    // this.callServer()\n    // .then(res => this.setState({data: res.express}))\n    // .catch(err => console.log(err));\n    this.getText()\n    .then(res => this.setState(res.description))\n    .catch(err => console.log(err));\n  }\n\n  // callServer = async () => {\n  //   const response = await fetch('/express_backend');\n  //   const body = await response.json()\n  //   console.log(body)\n  //   if(response.status !== 200) {\n  //     throw Error(body.message)\n  //   }\n  //   return body\n  // };\n\n  getText = async () => {\n    const response  = await fetch('/read_text');\n    const body = await response.json();\n    console.log(body)\n    if(response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body\n  }\n\n  render() {\n    let value = undefined\n    let handleChange = undefined\n    return (\n      <Grid container className=\"App\" direction=\"row\" alignItems=\"stretch\">\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Item One\" />\n            <Tab label=\"Item Two\" />\n            <Tab label=\"Item Three\" />\n          </Tabs>\n        </AppBar>\n        <p>{this.state.data}</p>\n        <Dropzone onDrop={acceptedFiles => console.log(acceptedFiles)}>\n          {({getRootProps, getInputProps}) => (\n            <section>\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                <p>Drag 'n' drop some files here, or click to select files</p>\n              </div>\n            </section>\n          )}\n        </Dropzone>\n        <Container maxWidth='xl'>\n          <form style={{padding: \"10px\"}}>\n            <input type=\"text\"></input>\n            <input type=\"submit\"></input>\n          </form>\n          {/* <Box component=\"span\" m={12}>\n            <Button variant=\"contained\" color=\"primary\">Press me</Button>\n          </Box> */}\n        </Container>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}