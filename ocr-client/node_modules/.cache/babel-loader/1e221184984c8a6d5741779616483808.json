{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, Container, AppBar, Card } from '@material-ui/core';\nimport Dropzone from '../../Components/Dropzone/Dropzone';\nimport Scroll from '../../Components/Scroll/Scroll';\n\nfunction TextDetection() {\n  _s();\n\n  const [data, acceptedImage] = useState([], \"\");\n\n  const uploadImage = async image => {\n    var formData = new FormData();\n    formData.append('photo', image[0]);\n    const response = await fetch('/upload', {\n      method: \"post\",\n      body: formData\n    });\n    const body = await response.json();\n    console.log(body.split(/\\r?\\n/));\n    data(body.split(/\\r?\\n/));\n  };\n\n  function clearText() {\n    data([]);\n  }\n\n  function logImage() {\n    console.log(acceptedImage);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: \"App\",\n    direction: \"column\",\n    alignItems: \"stretch\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      id: \"appBar\",\n      position: \"static\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      id: \"dropzoneContainer\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(Dropzone, {\n          uploadImage: uploadImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Scroll, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: data.map((segment, i) => {\n            return /*#__PURE__*/_jsxDEV(\"form\", {\n              value: \"segments\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `segment${i}`,\n                children: [\"Segment \", i + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: `segment${i}`,\n                type: \"text\",\n                defaultValue: segment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => this.clearText(),\n        children: \"Clear text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextDetection, \"byc+xHRWS0EDOXY7lAJdOGI06XE=\");\n\n_c = TextDetection;\nexport default TextDetection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextDetection\");","map":{"version":3,"sources":["/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js"],"names":["React","useState","Grid","Container","AppBar","Card","Dropzone","Scroll","TextDetection","data","acceptedImage","uploadImage","image","formData","FormData","append","response","fetch","method","body","json","console","log","split","clearText","logImage","map","segment","i"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Grid, Container, AppBar, Card } from '@material-ui/core';\nimport Dropzone from '../../Components/Dropzone/Dropzone'\nimport Scroll from '../../Components/Scroll/Scroll'\n\nfunction TextDetection() {\n  const [data, acceptedImage] = useState([],\"\")\n\n  const uploadImage = async (image) => {\n    var formData = new FormData();\n    formData.append('photo', image[0])\n    const response = await fetch('/upload', {\n      method: \"post\",\n      body: formData\n    })\n    const body = await response.json();\n    console.log(body.split(/\\r?\\n/))\n    data(body.split(/\\r?\\n/))\n  }\n\n  function clearText() {\n    data([])\n  }\n\n  function logImage() {\n    console.log(acceptedImage)\n  }\n\n  return (\n    <Grid container className=\"App\" direction=\"column\" alignItems=\"stretch\">\n      <AppBar id=\"appBar\" position=\"static\">\n      </AppBar>\n      <Container id=\"dropzoneContainer\">\n        <Card variant=\"outlined\">\n          <Dropzone uploadImage = {uploadImage}/>\n        </Card>\n      </Container>\n      <Container>\n      {/* <p>{this.state.data}</p> */}\n        <Scroll>\n          <div>\n            {\n              data.map((segment, i) => {\n                return (\n                  <form key={i} value=\"segments\">\n                    <label htmlFor={`segment${i}`}>Segment {i+1}</label>\n                    <input name={`segment${i}`} type=\"text\" defaultValue={segment}></input>\n                  </form>\n                )\n              })\n            }\n          </div>\n        </Scroll>\n      </Container>\n      <Container>\n        <button type=\"button\" onClick={() => this.clearText()}>Clear text</button>\n      </Container>\n    </Grid>\n  );\n}\n\nexport default TextDetection;\n"]},"metadata":{},"sourceType":"module"}