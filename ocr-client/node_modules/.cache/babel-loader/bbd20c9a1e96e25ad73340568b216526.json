{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Header from './Containers/Header/Header';\nimport TextDetection from './Containers/TextDetection/TextDetection';\nimport FormData from './Components/Tables/FormData';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { orange, lightBlue, deepPurple, deepOrange } from \"@material-ui/core/colors\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  mainArea: {\n    flexGrow: 1,\n    marginTop: 35,\n    height: 'calc(100vh-35px)',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    display: 'flex'\n  }\n}));\nexport default function App() {\n  _s();\n\n  const [darkState, setDarkState] = useState(false);\n  const [text, setKeyData] = useState([]);\n  const [tableX, setTableX] = useState([]);\n  const [tableY, setTableY] = useState([]);\n  const [json, setJson] = useState({});\n  useEffect(() => {\n    console.log(json);\n  }, [json]);\n  const classes = useStyles();\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType\n    },\n    primary: {\n      main: mainPrimaryColor\n    },\n    secondary: {\n      main: mainSecondaryColor\n    }\n  });\n\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  function clearText() {\n    setKeyData([\"\"]);\n  }\n\n  const writeToFile = async () => {\n    console.log(json);\n    const response = await fetch('http://localhost:5000/writeInvoice', {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(json)\n    });\n    const body = await response.json();\n    console.log(body);\n    return body;\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          darkState: darkState,\n          handleDarkMode: handleThemeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: classes.mainArea,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          className: classes.container,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextDetection, {\n              keyDataToParent: setKeyData,\n              clearText: clearText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 8,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormData, {\n                segments: text,\n                setJson: setJson\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              type: \"button\",\n              onClick: () => writeToFile(),\n              children: \"send to endpoint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gV6ydo0N6m4li22/vPBv+fT46Is=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/App.js"],"names":["React","useEffect","useState","makeStyles","Grid","Button","Header","TextDetection","FormData","createMuiTheme","ThemeProvider","orange","lightBlue","deepPurple","deepOrange","useStyles","theme","root","display","mainArea","flexGrow","marginTop","height","overflow","container","paddingTop","spacing","paddingBottom","App","darkState","setDarkState","text","setKeyData","tableX","setTableX","tableY","setTableY","json","setJson","console","log","classes","palletType","mainPrimaryColor","mainSecondaryColor","darkTheme","palette","type","primary","main","secondary","handleThemeChange","clearText","writeToFile","response","fetch","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button'\nimport Header from './Containers/Header/Header';\nimport TextDetection from './Containers/TextDetection/TextDetection';\nimport FormData from './Components/Tables/FormData';\n\nimport { createMuiTheme , ThemeProvider } from '@material-ui/core/styles'\nimport {\n  orange,\n  lightBlue,\n  deepPurple,\n  deepOrange\n} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  mainArea:{\n    flexGrow: 1,\n    marginTop: 35,\n    height: 'calc(100vh-35px)',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    display: 'flex',\n  },\n}))\n\nexport default function App() {\n  const [darkState, setDarkState ] = useState(false);\n  const [text, setKeyData] = useState([]);\n  const [tableX, setTableX] = useState([]);\n  const [tableY, setTableY] = useState([])\n  const [json, setJson] = useState({})\n\n  useEffect(() => {\n    console.log(json)\n  }, [json])\n\n  const classes = useStyles()\n\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n    },\n    primary: {\n      main: mainPrimaryColor\n    },\n    secondary: {\n      main: mainSecondaryColor\n    },\n  });\n\n  const handleThemeChange =() => {\n    setDarkState(!darkState)\n  };\n\n  function clearText() {\n    setKeyData([\"\"])\n  }\n\n  const writeToFile = async () => {\n    console.log(json)\n    const response = await fetch('http://localhost:5000/writeInvoice', {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(json)\n    })\n    const body = await response.json()\n    console.log(body)\n    return body\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className={classes.root}>\n        <Grid>\n          <Header darkState={darkState} handleDarkMode={handleThemeChange}/>\n        </Grid>\n        <main className={classes.mainArea}>\n          <Grid container spacing={3} className={classes.container}>\n            <Grid item xs={12} sm={4}>\n              <TextDetection keyDataToParent={setKeyData} clearText={clearText}/>\n            </Grid>\n            <Grid item xs={12} sm={8}>\n              <Grid container >\n                <FormData segments={text} setJson={setJson}/>\n              </Grid>\n\n              <Button variant=\"outlined\" type=\"button\" onClick={() => writeToFile()}>send to endpoint</Button>\n            </Grid>\n          </Grid>\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}