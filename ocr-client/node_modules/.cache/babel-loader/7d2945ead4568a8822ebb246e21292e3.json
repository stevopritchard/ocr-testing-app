{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Container, Card, Button } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Dropzone from '../../Components/Dropzone/Dropzone';\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    marginLeft: '8px',\n    marginRight: '8px',\n    marginTop: '15px'\n  },\n  dropzone: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  dropzoneCard: {// marginBottom: 40,\n  },\n  buttonArea: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginLeft: '13px'\n  },\n  toolbarButtons: {\n    display: 'flex',\n    marginLeft: 'auto'\n  }\n}));\n\nfunction TextDetection({\n  keyDataToParent,\n  clearText\n}) {\n  _s();\n\n  const classes = useStyles();\n  var dummyData = [{\n    name: 'Naylor 81091331 .jpg',\n    purchaseOrders: ['146499', '342010'],\n    date: '19/02/2021'\n  }, {\n    name: 'Eccles 61275.jpg',\n    purchaseOrders: ['146865'],\n    date: '16/02/2021'\n  }, {\n    name: 'no-po.jpg',\n    purchaseOrders: ['999999'],\n    date: '01/01/2021'\n  }];\n\n  const uploadImage = async images => {\n    var formData = new FormData();\n    images.forEach(image => formData.append('photo', image));\n    const formResponse = await fetch('/getFormData', {\n      method: \"post\",\n      body: formData\n    });\n    const formResponseData = await formResponse.json(); // const tableResponse = await fetch('/getTableData', {\n    //   method: \"post\",\n    //   body: formData\n    // })\n    // const tableResponseData = await tableResponse.json();\n    // console.log(tableResponseData)\n\n    keyDataToParent(Object.values(formResponseData)); // formResponseData.purchaseOrders.forEach((number) => searchBP(number))\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Grid className={classes.root}>\n    _jsxDEV(Toolbar, {\n      className: classes.root,\n      variant: \"dense\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 5,\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 3,\n        className: classes.dropzone,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          style: {\n            border: '2px dashed gray'\n          },\n          className: classes.dropzoneCard,\n          children: /*#__PURE__*/_jsxDEV(Dropzone, {\n            uploadImage: uploadImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 4,\n        className: classes.toolbarButtons,\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          className: classes.buttonArea,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"default\",\n            type: \"button\",\n            disableElevation: true,\n            onClick: () => clearText(),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: classes.buttonArea,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            type: \"button\",\n            disableElevation: true,\n            onClick: () => keyDataToParent(dummyData),\n            children: \"Static\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: classes.buttonArea,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this) // </Grid>\n\n  );\n}\n\n_s(TextDetection, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TextDetection;\nexport default TextDetection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextDetection\");","map":{"version":3,"sources":["/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js"],"names":["React","useEffect","makeStyles","Grid","Paper","Container","Card","Button","Toolbar","Dropzone","useStyles","root","display","flexGrow","marginLeft","marginRight","marginTop","dropzone","flexDirection","justifyContent","dropzoneCard","buttonArea","toolbarButtons","TextDetection","keyDataToParent","clearText","classes","dummyData","name","purchaseOrders","date","uploadImage","images","formData","FormData","forEach","image","append","formResponse","fetch","method","body","formResponseData","json","Object","values","border"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid, Paper, Container, Card, Button } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Dropzone from '../../Components/Dropzone/Dropzone'\n\nconst useStyles = makeStyles(() => ({\n  root:{\n    display: 'flex',\n    flexGrow: 1,\n    marginLeft: '8px',\n    marginRight: '8px',\n    marginTop: '15px'\n  },\n  dropzone:{\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  dropzoneCard: {\n    // marginBottom: 40,\n  },\n  buttonArea: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginLeft: '13px'\n  },\n  toolbarButtons: {\n    display: 'flex',\n    marginLeft: 'auto',\n  },\n}));\n\nfunction TextDetection({ keyDataToParent, clearText }) {\n  const classes = useStyles()\n\n  var dummyData = [\n    {\n      name: 'Naylor 81091331 .jpg',\n      purchaseOrders: [ '146499', '342010' ],\n      date: '19/02/2021'\n    },\n    {\n      name: 'Eccles 61275.jpg',\n      purchaseOrders: [ '146865' ],\n      date: '16/02/2021'\n    },\n    {\n      name: 'no-po.jpg',\n      purchaseOrders: [ '999999' ],\n      date: '01/01/2021'\n    }\n  ]\n  \n  const uploadImage = async (images) => {\n    var formData = new FormData();\n    images.forEach(image => formData.append('photo', image))\n    const formResponse = await fetch('/getFormData', {\n      method: \"post\",\n      body: formData\n    })\n    const formResponseData = await formResponse.json();\n    \n    // const tableResponse = await fetch('/getTableData', {\n    //   method: \"post\",\n    //   body: formData\n    // })\n\n    // const tableResponseData = await tableResponse.json();\n    // console.log(tableResponseData)\n    keyDataToParent(Object.values(formResponseData))\n    // formResponseData.purchaseOrders.forEach((number) => searchBP(number))\n  }\n\n  return (\n    // <Grid className={classes.root}>\n    <Toolbar className={classes.root} variant=\"dense\">\n      <Grid xs={5}>\n        Dashboard\n      </Grid>\n      <Grid xs={3} className={classes.dropzone}>\n        <Card \n          variant=\"outlined\" \n          style={{border: '2px dashed gray'}}\n          className={classes.dropzoneCard}\n        >\n          <Dropzone uploadImage = {uploadImage}/>\n        </Card>\n      </Grid>\n      <Grid xs={4} className={classes.toolbarButtons}>\n        <Container className={classes.buttonArea}>\n          <Button \n            variant=\"contained\"\n            color=\"default\"\n            type=\"button\" \n            disableElevation \n            onClick={() => clearText()}\n          >\n            Clear\n          </Button>\n        </Container>\n        <Container className={classes.buttonArea}>\n          <Button \n            variant=\"outlined\" \n            type=\"button\" \n            disableElevation \n            onClick={() => keyDataToParent(dummyData)}\n          >\n            Static\n          </Button>\n        </Container>\n        <Container className={classes.buttonArea}>\n          <Button\n            variant=\"contained\"\n          >\n            Logout\n          </Button>\n        </Container>\n      </Grid>\n    </Toolbar>\n    // </Grid>\n  );\n}\n\nexport default TextDetection;\n"]},"metadata":{},"sourceType":"module"}