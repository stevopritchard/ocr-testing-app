{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Tables/POList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport { Select, MenuItem } from '@material-ui/core';\nconst useStyles = makeStyles(() => ({\n  container: {\n    marginLeft: 10,\n    marginRight: 10,\n    maxHeight: 'calc(100vh - 150px)',\n    height: '100%'\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {//   backgroundColor: theme.palette.common.black,\n    //   color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-ot-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nexport default function POList({\n  invoices\n}) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      stickHeader: true,\n      \"aria-label\": \"sticky table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Doc Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"PO Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: invoices ? invoices.map((invoice, index) => {\n          if (invoice !== \"\") {\n            return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  value: invoice.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  value: invoice.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  value: invoice.validNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: invoice.validNumber ? \"Ready to send to BP...\" : \"Review and match...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this);\n          }\n        }) : /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(POList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = POList;\n\nvar _c;\n\n$RefreshReg$(_c, \"POList\");","map":{"version":3,"sources":["/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Tables/POList.js"],"names":["React","useState","useEffect","useRef","makeStyles","withStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","Checkbox","Button","Select","MenuItem","useStyles","container","marginLeft","marginRight","maxHeight","height","StyledTableCell","theme","head","body","fontSize","StyledTableRow","root","backgroundColor","palette","action","hover","POList","invoices","classes","map","invoice","index","name","date","validNumber"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport Button from '@material-ui/core/Button'\n\nimport {Select, MenuItem } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        marginLeft: 10,\n        marginRight: 10,\n        maxHeight: 'calc(100vh - 150px)',\n        height: '100%',\n    },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n    //   backgroundColor: theme.palette.common.black,\n    //   color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  \n  }))(TableCell);\n  \nconst StyledTableRow = withStyles((theme) => ({\nroot: { \n    '&:nth-ot-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n    },\n},\n}))(TableRow);\n\n\nexport default function POList({invoices}) {\n    const classes = useStyles()\n    \n    return (\n        <TableContainer component={Paper} className={classes.container}>\n            <Table stickHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell>Doc Name</StyledTableCell>\n                        <StyledTableCell>Date</StyledTableCell>\n                        <StyledTableCell>PO Number</StyledTableCell>\n                        <StyledTableCell>Status</StyledTableCell>\n                        <StyledTableCell>Options</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        invoices ?\n                        invoices.map((invoice, index) => {\n                            if (invoice !== \"\") {\n                                return (\n                                    <StyledTableRow key={index}>\n                                        <StyledTableCell>\n                                            <TextField\n                                                value={invoice.name}\n                                            >\n                                            </TextField>\n                                        </StyledTableCell>\n                                        <StyledTableCell>\n                                            <TextField\n                                                value={invoice.date}\n                                            >\n                                            </TextField>\n                                        </StyledTableCell>\n                                        <StyledTableCell>\n                                            <TextField\n                                                value={invoice.validNumber}\n                                            >\n                                            </TextField>\n                                        </StyledTableCell>\n                                        <StyledTableCell>\n                                            {\n                                                invoice.validNumber ?\n                                                \"Ready to send to BP...\"\n                                                :\n                                                \"Review and match...\"\n                                            }\n                                        </StyledTableCell>\n                                        <StyledTableCell>\n\n                                        </StyledTableCell>\n                                    </StyledTableRow>\n                                )\n                            }\n                        })\n                        :\n                        <StyledTableRow>\n                            <StyledTableCell></StyledTableCell>\n                            <StyledTableCell></StyledTableCell>\n                            <StyledTableCell></StyledTableCell>\n                            <StyledTableCell></StyledTableCell>\n                            <StyledTableCell></StyledTableCell>\n                        </StyledTableRow>\n                    }\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}"]},"metadata":{},"sourceType":"module"}