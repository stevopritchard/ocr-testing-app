{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Tables/POList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport { Select, MenuItem } from '@material-ui/core';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginLeft: 10,\n    marginRight: 10,\n    maxHeight: 'calc(100vh - 150px)',\n    height: '100%'\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {//   backgroundColor: theme.palette.common.black,\n    //   color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-ot-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nexport default function POList({\n  invoices,\n  setJson,\n  searchBP\n}) {\n  _s();\n\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n  const modalRefs = useRef([]);\n\n  if (modalRefs.current !== invoices.length) {\n    modalRefs.current = Array(invoices.length).fill().map((_, i) => modalRefs.current[i] = \"\");\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (i, e) => {\n    modalRefs.current[i] = e.target.value;\n  };\n\n  const replaceOrderId = newOrderId => {\n    searchBP(newOrderId).then(response => console.log(response));\n  };\n\n  const body = key => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyle,\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"simple-modal-title\",\n        children: \"Try another PO number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"simple-modal-description\",\n        children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: handleChange.bind(this, key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => replaceOrderId(modalRefs.current[key]),\n        children: \"Search BP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      stickyHeader: true,\n      \"aria-label\": \"sticky table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Doc Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"PO Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: invoices ? invoices.map((invoice, index) => {\n          return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: invoice.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: invoice.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: invoice.validNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: invoice.validNumber ? \"Matched\" : \"No Match\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: invoice.validNumber ? \"Ready to send to BP...\" : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  onClick: handleOpen,\n                  children: \"Review and match...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                  open: open,\n                  onClose: handleClose,\n                  \"aria-labelledby\": \"simple-modal-title\",\n                  \"aria-describedby\": \"simple-modal-description\",\n                  children: body(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s(POList, \"KZ0h+Naa141tP6Nnylgyt5uXQHI=\", false, function () {\n  return [useStyles];\n});\n\n_c = POList;\n\nvar _c;\n\n$RefreshReg$(_c, \"POList\");","map":{"version":3,"sources":["/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Tables/POList.js"],"names":["React","useState","useEffect","useRef","makeStyles","withStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","Checkbox","Modal","Button","Select","MenuItem","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","container","marginLeft","marginRight","maxHeight","height","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","StyledTableCell","head","body","fontSize","StyledTableRow","root","action","hover","POList","invoices","setJson","searchBP","modalStyle","open","setOpen","modalRefs","current","length","Array","fill","map","_","i","handleOpen","handleClose","handleChange","e","target","value","replaceOrderId","newOrderId","then","response","console","log","key","classes","bind","invoice","index","name","date","validNumber"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport Modal from '@material-ui/core/Modal'\n\nimport Button from '@material-ui/core/Button'\n\nimport {Select, MenuItem } from '@material-ui/core'\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n  \nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginLeft: 10,\n        marginRight: 10,\n        maxHeight: 'calc(100vh - 150px)',\n        height: '100%',\n    },\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n    //   backgroundColor: theme.palette.common.black,\n    //   color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  \n  }))(TableCell);\n  \nconst StyledTableRow = withStyles((theme) => ({\nroot: { \n    '&:nth-ot-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n    },\n},\n}))(TableRow);\n\n\nexport default function POList({invoices, setJson, searchBP}) {\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n\n    const modalRefs = useRef([])\n    \n    if(modalRefs.current !== invoices.length) {\n        modalRefs.current = Array(invoices.length).fill().map((_, i) => \n            modalRefs.current[i] = \"\"\n        )\n    }\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n      \n    const handleChange = (i, e) => {\n        modalRefs.current[i] = e.target.value\n    }\n\n    const replaceOrderId = (newOrderId) => {\n        searchBP(newOrderId)\n        .then(response => console.log(response))\n    }\n\n    const body = (key) => {\n        return (\n            <div style={modalStyle} className={classes.paper}>\n              <h2 id=\"simple-modal-title\">Try another PO number</h2>\n              <p id=\"simple-modal-description\">\n                Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n              </p>\n                <TextField \n                    onChange={handleChange.bind(this, key)}\n                />\n                <Button onClick={() => replaceOrderId(modalRefs.current[key])}>Search BP</Button>\n            </div>\n\n        )\n    }\n    \n    const classes = useStyles()\n\n    return (\n        <TableContainer component={Paper} className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell>Doc Name</StyledTableCell>\n                        <StyledTableCell>Date</StyledTableCell>\n                        <StyledTableCell>PO Number</StyledTableCell>\n                        <StyledTableCell>Status</StyledTableCell>\n                        <StyledTableCell>Options</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        invoices ?\n                        invoices.map((invoice, index) => {\n                            return (\n                                <StyledTableRow key={index}>\n                                    <StyledTableCell>\n                                        <TextField\n                                            value={invoice.name}\n                                        >\n                                        </TextField>\n                                    </StyledTableCell>\n                                    <StyledTableCell>\n                                        <TextField\n                                            value={invoice.date}\n                                        >\n                                        </TextField>\n                                    </StyledTableCell>\n                                    <StyledTableCell>\n                                        <TextField\n                                            value={invoice.validNumber}\n                                        >\n                                        </TextField>\n                                    </StyledTableCell>\n                                    <StyledTableCell>\n                                        {\n                                            invoice.validNumber ?\n                                            \"Matched\"\n                                            :\n                                            \"No Match\"\n                                        }\n                                    </StyledTableCell>\n                                    <StyledTableCell>\n                                        {\n                                            invoice.validNumber ?\n                                            \"Ready to send to BP...\"\n                                            :\n                                            <div>\n                                                <Button type=\"button\" onClick={handleOpen}>Review and match...</Button>  \n                                                <Modal\n                                                    open={open}\n                                                    onClose={handleClose}\n                                                    aria-labelledby=\"simple-modal-title\"\n                                                    aria-describedby=\"simple-modal-description\"\n                                                    >\n                                                    {body(index)}\n                                                </Modal>\n                                            </div>\n                                        }\n                                    </StyledTableCell>\n                                </StyledTableRow>\n                            )\n                        })\n                        :\n                        <StyledTableRow>\n                            <StyledTableCell></StyledTableCell>\n                            <StyledTableCell></StyledTableCell>\n                            <StyledTableCell></StyledTableCell>\n                            <StyledTableCell></StyledTableCell>\n                            <StyledTableCell></StyledTableCell>\n                        </StyledTableRow>\n                    }\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}"]},"metadata":{},"sourceType":"module"}