{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Container, AppBar, Card } from '@material-ui/core';\nimport Dropzone from '../../Components/Dropzone/Dropzone';\nimport Scroll from '../../Components/Scroll/Scroll';\nimport \"./App.css\";\n\nclass TextDetection extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      acceptedImage: \"\"\n    };\n\n    this.uploadImage = async image => {\n      var formData = new FormData();\n      formData.append('photo', image[0]);\n      const response = await fetch('/upload', {\n        method: \"post\",\n        body: formData\n      });\n      const body = await response.json();\n      console.log(body.split(/\\r?\\n/));\n      this.setState({\n        data: body.split(/\\r?\\n/)\n      });\n    };\n  }\n\n  clearText() {\n    this.setState({\n      data: []\n    });\n  }\n\n  logImage() {\n    console.log(this.state.acceptedImage);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"App\",\n      direction: \"column\",\n      alignItems: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        id: \"appBar\",\n        position: \"static\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        id: \"dropzoneContainer\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          children: /*#__PURE__*/_jsxDEV(Dropzone, {\n            uploadImage: this.uploadImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Scroll, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.data.map((segment, i) => {\n              return /*#__PURE__*/_jsxDEV(\"form\", {\n                value: \"segments\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `segment${i}`,\n                  children: [\"Segment \", i + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: `segment${i}`,\n                  type: \"text\",\n                  defaultValue: segment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.clearText(),\n          children: \"Clear text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TextDetection;","map":{"version":3,"sources":["/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js"],"names":["React","makeStyles","Grid","Container","AppBar","Card","Dropzone","Scroll","TextDetection","Component","state","data","acceptedImage","uploadImage","image","formData","FormData","append","response","fetch","method","body","json","console","log","split","setState","clearText","logImage","render","map","segment","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid, Container, AppBar, Card } from '@material-ui/core';\nimport Dropzone from '../../Components/Dropzone/Dropzone'\nimport Scroll from '../../Components/Scroll/Scroll'\nimport \"./App.css\";\n\nclass TextDetection extends React.Component {\n  state = {\n    data: [],\n    acceptedImage: \"\"\n  };\n\n  uploadImage = async (image) => {\n    var formData = new FormData();\n    formData.append('photo', image[0])\n    const response = await fetch('/upload', {\n      method: \"post\",\n      body: formData\n    })\n    const body = await response.json();\n    console.log(body.split(/\\r?\\n/))\n    this.setState({data: body.split(/\\r?\\n/)})\n  }\n\n  clearText() {\n    this.setState({data: []})\n  }\n\n  logImage() {\n    console.log(this.state.acceptedImage)\n  }\n\n  render() {\n    return (\n      <Grid container className=\"App\" direction=\"column\" alignItems=\"stretch\">\n        <AppBar id=\"appBar\" position=\"static\">\n        </AppBar>\n        <Container id=\"dropzoneContainer\">\n          <Card variant=\"outlined\">\n            <Dropzone uploadImage = {this.uploadImage}/>\n          </Card>\n        </Container>\n        <Container>\n        {/* <p>{this.state.data}</p> */}\n          <Scroll>\n            <div>\n              {\n                this.state.data.map((segment, i) => {\n                  return (\n                    <form key={i} value=\"segments\">\n                      <label htmlFor={`segment${i}`}>Segment {i+1}</label>\n                      <input name={`segment${i}`} type=\"text\" defaultValue={segment}></input>\n                    </form>\n                  )\n                })\n              }\n            </div>\n          </Scroll>\n        </Container>\n        <Container>\n          <button type=\"button\" onClick={() => this.clearText()}>Clear text</button>\n        </Container>\n      </Grid>\n    );\n  }\n}\n\nexport default TextDetection;\n"]},"metadata":{},"sourceType":"module"}