{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Container, Card, Button } from '@material-ui/core';\nimport Dropzone from '../../Components/Dropzone/Dropzone';\nconst useStyles = makeStyles(() => ({\n  dropzoneCard: {\n    marginBottom: 40\n  },\n  buttonArea: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nfunction TextDetection({\n  keyDataToParent,\n  clearText\n}) {\n  _s();\n\n  const classes = useStyles();\n  var dummyData = [{\n    name: 'Naylor 81091331 .jpg',\n    purchaseOrders: ['146499', '342010'],\n    date: '19/02/2021'\n  }, {\n    name: 'Eccles 61275.jpg',\n    purchaseOrders: ['146865'],\n    date: '16/02/2021'\n  }, {\n    name: 'no-po.jpg',\n    purchaseOrders: ['999999'],\n    date: '01/01/2021'\n  }];\n\n  const uploadImage = async image => {\n    var formData = new FormData();\n    formData.append('photo', image);\n    console.log(formData);\n    const formResponse = await fetch('/getFormData', {\n      method: \"post\",\n      body: formData\n    });\n    const formResponseData = await formResponse.json(); // const tableResponse = await fetch('/getTableData', {\n    //   method: \"post\",\n    //   body: formData\n    // })\n    // const tableResponseData = await tableResponse.json();\n    // console.log(tableResponseData)\n\n    console.log(formResponseData.purchaseOrders); // keyDataToParent(Object.entries(formResponseData))\n\n    formResponseData.purchaseOrders.forEach(number => searchBP(number));\n  };\n\n  const searchBP = async orderNumber => {\n    const findOrder = await fetch('/queryBp', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        orderId: orderNumber\n      })\n    });\n    const testComplete = await findOrder.json();\n    console.log(testComplete);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        className: classes.dropzoneCard,\n        children: /*#__PURE__*/_jsxDEV(Dropzone, {\n          uploadImage: uploadImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.buttonArea,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        type: \"button\",\n        onClick: () => clearText(),\n        children: \"Clear text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.buttonArea,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        type: \"button\",\n        onClick: () => keyDataToParent(dummyData),\n        children: \"Use Dummy Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextDetection, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TextDetection;\nexport default TextDetection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextDetection\");","map":{"version":3,"sources":["/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js"],"names":["React","useEffect","makeStyles","Grid","Container","Card","Button","Dropzone","useStyles","dropzoneCard","marginBottom","buttonArea","display","justifyContent","TextDetection","keyDataToParent","clearText","classes","dummyData","name","purchaseOrders","date","uploadImage","image","formData","FormData","append","console","log","formResponse","fetch","method","body","formResponseData","json","forEach","number","searchBP","orderNumber","findOrder","headers","JSON","stringify","orderId","testComplete"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid, Container, Card, Button } from '@material-ui/core';\nimport Dropzone from '../../Components/Dropzone/Dropzone'\n\nconst useStyles = makeStyles(() => ({\n  dropzoneCard: {\n    marginBottom: 40,\n  },\n  buttonArea: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nfunction TextDetection({ keyDataToParent, clearText }) {\n  const classes = useStyles()\n\n  var dummyData = [\n    {\n      name: 'Naylor 81091331 .jpg',\n      purchaseOrders: [ '146499', '342010' ],\n      date: '19/02/2021'\n    },\n    {\n      name: 'Eccles 61275.jpg',\n      purchaseOrders: [ '146865' ],\n      date: '16/02/2021'\n    },\n    {\n      name: 'no-po.jpg',\n      purchaseOrders: [ '999999' ],\n      date: '01/01/2021'\n    }\n  ]\n  \n  const uploadImage = async (image) => {\n    var formData = new FormData();\n    formData.append('photo', image)\n    console.log(formData)\n    const formResponse = await fetch('/getFormData', {\n      method: \"post\",\n      body: formData\n    })\n    const formResponseData = await formResponse.json();\n    \n    // const tableResponse = await fetch('/getTableData', {\n    //   method: \"post\",\n    //   body: formData\n    // })\n\n    // const tableResponseData = await tableResponse.json();\n    // console.log(tableResponseData)\n    console.log(formResponseData.purchaseOrders)\n    // keyDataToParent(Object.entries(formResponseData))\n    formResponseData.purchaseOrders.forEach((number) => searchBP(number))\n  }\n  \n  const searchBP = async (orderNumber) => {\n    const findOrder = await fetch('/queryBp', {\n      method: \"POST\",\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({orderId: orderNumber})\n    });\n    const testComplete = await findOrder.json()\n    console.log(testComplete)\n  }\n\n  return (\n    <Grid>\n      <Container>\n        <Card variant=\"outlined\" className={classes.dropzoneCard}>\n          <Dropzone uploadImage = {uploadImage}/>\n        </Card>\n      </Container>\n      <Container className={classes.buttonArea}>\n        <Button variant=\"outlined\" type=\"button\" onClick={() => clearText()}>Clear text</Button>\n      </Container>\n      <Container className={classes.buttonArea}>\n        <Button variant=\"outlined\" type=\"button\" onClick={() => keyDataToParent(dummyData)}>Use Dummy Data</Button>\n      </Container>\n    </Grid>\n  );\n}\n\nexport default TextDetection;\n"]},"metadata":{},"sourceType":"module"}