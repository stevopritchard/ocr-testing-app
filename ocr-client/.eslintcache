[{"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/index.js":"1","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/reportWebVitals.js":"2","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/App.js":"3","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Scroll/Scroll.js":"4","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Dropzone/Dropzone.js":"5","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js":"6","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/TextTable/TextTable.js":"7","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/Header/Header.js":"8"},{"size":500,"mtime":1610117449063,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610117449064,"results":"11","hashOfConfig":"10"},{"size":2804,"mtime":1617126430970,"results":"12","hashOfConfig":"10"},{"size":453,"mtime":1612092848792,"results":"13","hashOfConfig":"10"},{"size":827,"mtime":1612289903175,"results":"14","hashOfConfig":"10"},{"size":1189,"mtime":1616610718251,"results":"15","hashOfConfig":"10"},{"size":6680,"mtime":1617135656732,"results":"16","hashOfConfig":"10"},{"size":1050,"mtime":1612289737389,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"45cmna",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/index.js",[],["37","38"],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/reportWebVitals.js",[],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/App.js",["39"],"import React, { useEffect, useState }from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button'\nimport Header from './Containers/Header/Header';\nimport TextDetection from './Containers/TextDetection/TextDetection';\nimport TextTable from './Components/TextTable/TextTable';\n\nimport { createMuiTheme , ThemeProvider } from '@material-ui/core/styles'\nimport {\n  orange,\n  lightBlue,\n  deepPurple,\n  deepOrange\n} from \"@material-ui/core/colors\";\nimport { Container } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  mainArea:{\n    flexGrow: 1,\n    marginTop: 35,\n    height: 'calc(100vh-35px)',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    display: 'flex',\n  },\n}))\n\nexport default function App() {\n  const [darkState, setDarkState ] = useState(false);\n  const [text, setText] = useState([]);\n  const [json, setJson] = useState({})\n\n  useEffect(() => {\n    console.log(json)\n  }, [json])\n\n  const classes = useStyles()\n\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n    },\n    primary: {\n      main: mainPrimaryColor\n    },\n    secondary: {\n      main: mainSecondaryColor\n    },\n  });\n\n  const handleThemeChange =() => {\n    setDarkState(!darkState)\n  };\n\n  function clearText() {\n    setText(\"\")\n  }\n\n  const writeToFile = async () => {\n    console.log(json)\n    const response = await fetch('http://localhost:5000/writeInvoice', {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(json)\n    })\n    const body = await response.json()\n    console.log(body)\n    return body\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className={classes.root}>\n        <Grid>\n          <Header darkState={darkState} handleDarkMode={handleThemeChange}/>\n        </Grid>\n        <main className={classes.mainArea}>\n          <Grid container spacing={3} className={classes.container}>\n            <Grid item xs={12} sm={4}>\n              <TextDetection textToParent={setText} clearText={clearText}/>\n            </Grid>\n            <Grid item xs={12} sm={8}>\n              <Grid container >\n                <TextTable segments={text} setJson={setJson}/>\n              </Grid>\n\n              <Button variant=\"outlined\" type=\"button\" onClick={() => writeToFile()}>send to endpoint</Button>\n            </Grid>\n          </Grid>\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}\n\n","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Scroll/Scroll.js",[],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Dropzone/Dropzone.js",[],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js",[],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/TextTable/TextTable.js",["40","41"],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/Header/Header.js",["42"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Switch from '@material-ui/core/Switch'\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function Header({ darkState, handleDarkMode }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"absolute\">\n        <Toolbar variant=\"dense\">\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Image Character Recognition\n          </Typography>\n          {/* <Switch checked={darkState} onChange={handleDarkMode}/> */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":16,"column":10,"nodeType":"49","messageId":"50","endLine":16,"endColumn":19},{"ruleId":"47","severity":1,"message":"51","line":55,"column":12,"nodeType":"49","messageId":"50","endLine":55,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":105,"column":7,"nodeType":"54","endLine":105,"endColumn":24,"suggestions":"55"},{"ruleId":"47","severity":1,"message":"56","line":5,"column":8,"nodeType":"49","messageId":"50","endLine":5,"endColumn":14},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'currentCategory' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'catRefs.current'. Either exclude it or remove the dependency array. Mutable values like 'catRefs.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["59"],"'Switch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: []",{"range":"62","text":"63"},[3380,3397],"[]"]