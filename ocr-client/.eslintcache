[{"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/index.js":"1","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/reportWebVitals.js":"2","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/App.js":"3","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Scroll/Scroll.js":"4","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Dropzone/Dropzone.js":"5","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js":"6","/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/TextTable/TextTable.js":"7"},{"size":500,"mtime":1610117449063,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610117449064,"results":"10","hashOfConfig":"9"},{"size":884,"mtime":1611935040466,"results":"11","hashOfConfig":"9"},{"size":199,"mtime":1611746532299,"results":"12","hashOfConfig":"9"},{"size":668,"mtime":1611773108801,"results":"13","hashOfConfig":"9"},{"size":971,"mtime":1611936750013,"results":"14","hashOfConfig":"9"},{"size":2001,"mtime":1611857406283,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"45cmna",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/index.js",[],["33","34"],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/reportWebVitals.js",[],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/App.js",[],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Scroll/Scroll.js",[],["35","36"],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/Dropzone/Dropzone.js",[],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Containers/TextDetection/TextDetection.js",[],"/Users/stephenpritchard/Web Development/ocr-testing-app/ocr-client/src/Components/TextTable/TextTable.js",["37","38"],"import React, {useStyles} from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Scroll from '../Scroll/Scroll';\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  \n  }))(TableCell);\n  \nconst StyledTableRow = withStyles((theme) => ({\nroot: {\n    '&:nth-ot-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n    },\n},\n}))(TableRow);\n\nexport default function TextTable({segments}) {\n    return (\n        <Scroll>\n            <TableContainer>\n            <Table>\n                <TableHead>\n                <TableRow>\n                    <StyledTableCell>Segment</StyledTableCell>\n                    <StyledTableCell>Transcribed Text</StyledTableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                {\n                    segments ?\n                    segments.map((segment, i) => {\n                        return (\n                        <StyledTableRow key={i}>\n                            <StyledTableCell>{i+1}</StyledTableCell>\n                            <StyledTableCell>{segment}</StyledTableCell>\n                        </StyledTableRow>\n                        )\n                    }) :\n                    <StyledTableRow>\n                        <StyledTableCell>0</StyledTableCell>\n                        <StyledTableCell>text goes here</StyledTableCell>\n                    </StyledTableRow>\n                }\n                </TableBody>\n            </Table>\n            </TableContainer>\n        </Scroll>\n    )\n}\n\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"39","replacedBy":"43"},{"ruleId":"41","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":16,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":2,"column":22,"nodeType":"47","messageId":"48","endLine":2,"endColumn":32},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],["50"],["51"],"no-unused-vars","'useStyles' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]