import { BrightpearlClient } from "./BrightpearlClient";
import { OrderStatusInfo, OrderStatusUpdateRef, OrderTypeCode } from "./IBrightpearlClient";
declare class OrderStatus {
    private bpClient;
    private cacheOrderStatusLookup;
    private orderStatuses;
    constructor(bpClient: BrightpearlClient, cacheOrderStatusLookup: boolean);
    /**
     * Updates orders using the specified status name or id
     * @param orderId - order id
     * @param statusRef - Information on the order status you wish to update an order with
     * @returns void - A successful request returns void
     */
    update(orderId: number, statusRef: OrderStatusUpdateRef): Promise<void>;
    /**
     * Gets all order statuses or a single order status if an ID is supplied
     * @param statusId - Optional order status id if you already know the value
     * @returns Array of OrderStatusInfo - Array of order statuses
     */
    get(statusId?: number): Promise<OrderStatusInfo[]>;
    /**
     * Gets all order statuses and finds the one which matches the specified name
     * @param orderStatuses - Array of order statuses you wish to query
     * @param statusName - The name of the order status you wish to find
     * @param orderTypeCode - The order type
     * @returns OrderStatusInfo - The order status in question if it exists
     */
    find(orderStatuses: OrderStatusInfo[], statusName: string, orderTypeCode: OrderTypeCode): OrderStatusInfo;
    private getCachedOrderStatuses;
    private getOrderStatuses;
}
export { OrderStatus };
